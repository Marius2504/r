// declare all the joystick pins
const int pinSW = 2; // digital pin connected to switch output
const int pinX = A0; // A0 - analog pin connected to X output
const int pinY = A1; // A1 - analog pin connected to Y output

// declare all the segments pins
const int pinA = 4;
const int pinB = 5;
const int pinC = 6;
const int pinD = 7;
const int pinE = 8;
const int pinF = 9;
const int pinG = 10;
const int pinDP = 11;

const int segSize = 8;
int index = 0;

// modify if you have common anode
bool commonAnode = false; 

const int noOfDigits = 10;
byte state = HIGH;
byte dpState = LOW;
byte swState = LOW;
byte lastSwState = LOW;
int xValue = 0;
int yValue = 0;

bool joyMoved = false;
int digit = 0;
int minThreshold = 400;
int maxThreshold = 600;

int segments[segSize] = { 
  pinA, pinB, pinC, pinD, pinE, pinF, pinG, pinDP
};

byte digitMatrix[noOfDigits][segSize - 1] = {
// a  b  c  d  e  f  g
  {1, 1, 1, 1, 1, 1, 0}, // 0
  {0, 1, 1, 0, 0, 0, 0}, // 1
  {1, 1, 0, 1, 1, 0, 1}, // 2
  {1, 1, 1, 1, 0, 0, 1}, // 3
  {0, 1, 1, 0, 0, 1, 1}, // 4
  {1, 0, 1, 1, 0, 1, 1}, // 5
  {1, 0, 1, 1, 1, 1, 1}, // 6
  {1, 1, 1, 0, 0, 0, 0}, // 7
  {1, 1, 1, 1, 1, 1, 1}, // 8
  {1, 1, 1, 1, 0, 1, 1}  // 9
};

void setup() {
  // initialize all the pins
  for (int i = 0; i < segSize; i++) {
    pinMode(segments[i], OUTPUT);
  }
  pinMode(pinSW, INPUT_PULLUP);
  if (commonAnode == true) {
    state = !state;
  }
}

void loop() {
  // TODO: use joystick movement to cycle through the numbers from 0 to 9, with a state changer (aka if you move the joystick, only one increment should happen. The next change should be after the joystick went back to initial position and is moved again).
	xValue = analogRead(pinX);
  swState = digitalRead(pinSW);
  if (xValue < minThreshold && joyMoved == false) {
    digit--;
    joyMoved = true;
  }
	if (xValue > maxThreshold && joyMoved == false) {
    digit++;
    joyMoved = true;
  }
	if (xValue > minThreshold && xValue < maxThreshold) {
    joyMoved = false;
  }
	
  if (digit > 9) {
    digit = 0;
  }
  if (digit < 0) {                                                                                                     
    digit = 9;
  }
  if (swState != lastSwState) {
    if (swState == HIGH) {
      dpState = !dpState;
    }
  }
  
  displayNumber(digit, dpState);
  delay(100);
  lastSwState = swState;
}


void displayNumber(byte digit, byte decimalPoint) {
  for(int i = 0; i < segSize - 1; i++)
  {
    digitalWrite(segments[i], digitMatrix[digit][i]);
  }
  digitalWrite(segments[segSize - 1], decimalPoint);
}               
